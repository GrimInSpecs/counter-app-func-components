[{"C:\\Users\\grimb\\Projects\\counter\\src\\index.js":"1","C:\\Users\\grimb\\Projects\\counter\\src\\App.js":"2","C:\\Users\\grimb\\Projects\\counter\\src\\reportWebVitals.js":"3","C:\\Users\\grimb\\Projects\\counter\\src\\components\\counter.jsx":"4","C:\\Users\\grimb\\Projects\\counter\\src\\components\\counters.jsx":"5","C:\\Users\\grimb\\Projects\\counter\\src\\components\\navbar.jsx":"6"},{"size":316,"mtime":1664127603502,"results":"7","hashOfConfig":"8"},{"size":1185,"mtime":1664127493684,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1663610536639,"results":"10","hashOfConfig":"8"},{"size":915,"mtime":1664127438076,"results":"11","hashOfConfig":"8"},{"size":670,"mtime":1664127872617,"results":"12","hashOfConfig":"8"},{"size":428,"mtime":1664126990871,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zs10yt",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"C:\\Users\\grimb\\Projects\\counter\\src\\index.js",[],[],"C:\\Users\\grimb\\Projects\\counter\\src\\App.js",[],[],"C:\\Users\\grimb\\Projects\\counter\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\grimb\\Projects\\counter\\src\\components\\counter.jsx",["36"],[],"import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./css/counter.css\";\r\n\r\nfunction Counter(props) {\r\n  let classes = getBadgeClasses();\r\n\r\n  return (\r\n    <div>\r\n      <span className={classes}>{formatCount()}</span>\r\n      <button\r\n        onClick={() => props.onIncrement(props.counter)}\r\n        className=\"btn btn-secondary btn-sm\"\r\n      >\r\n        Increase\r\n      </button>\r\n      <button\r\n        onClick={() => props.onDelete(props.counter.id)}\r\n        className=\"btn btn-danger btn-sm m-2\"\r\n      >\r\n        DELETE\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  function getBadgeClasses() {\r\n    let classes = \"badge m-2 badge-\";\r\n    classes += props.counter.value === 0 ? \"warning\" : \"primary\";\r\n    return classes;\r\n  }\r\n\r\n  function formatCount() {\r\n    const { value } = props.counter;\r\n    return value === 0 ? \"zero\" : value;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","C:\\Users\\grimb\\Projects\\counter\\src\\components\\counters.jsx",["37"],[],"import React, { useState } from \"react\";\r\nimport Counter from \"./counter\";\r\nimport \"./css/counters.css\";\r\n\r\nfunction Counters(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <button onClick={props.onReset} className=\"btn btn-secondary m-2\">\r\n        RESET\r\n      </button>\r\n      <div id=\"container\">\r\n        {props.counters.map((counter) => (\r\n          <Counter\r\n            onIncrement={props.onIncrement}\r\n            key={counter.id}\r\n            onDelete={props.onDelete}\r\n            counter={counter}\r\n          >\r\n            <h2>{counter.id}</h2>\r\n          </Counter>\r\n        ))}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Counters;\r\n","C:\\Users\\grimb\\Projects\\counter\\src\\components\\navbar.jsx",["38"],[],"import React from \"react\";\r\n\r\nfunction NavBar(props) {\r\n  return (\r\n    <nav className=\"navbar bg-light\">\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          <span>No. of Elements </span>\r\n          <span className=\"badge badge-pill badge-secondary\">\r\n            {props.totalCounters}\r\n          </span>\r\n        </a>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n",{"ruleId":"39","severity":1,"message":"40","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":25},{"ruleId":"39","severity":1,"message":"40","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":25},{"ruleId":"43","severity":1,"message":"44","line":7,"column":9,"nodeType":"45","endLine":7,"endColumn":46},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]